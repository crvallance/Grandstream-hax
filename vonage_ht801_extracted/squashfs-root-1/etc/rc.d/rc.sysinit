#!/bin/sh

#set -x

NFS=0

make_chkdir() {
	if [ ! -d $1 ]; then
		mkdir $1
	fi
}

get_system_status() {
    nvram set   :67="`tr \"[:lower:]\" \"[:upper:]\" < /proc/gxp/dev_info/dev_mac`"
    nvram set   :89="`cat /proc/gxp/dev_info/dev_alias`"
    nvram set :1395="`cat /proc/gxp/dev_info/hw_features/vendor`"
    nvram set :1396="`cat /proc/gxp/dev_info/hw_features/vendor_fullname`"
    nvram set :1397="`cat /proc/gxp/dev_info/PN`"
    nvram set :user_agent="`nvram get 1395` `nvram get 89` `nvram get 68`"
    nvram set :phone_model="`nvram get 89`"
}

#
# Start here.
#
ulimit -s 1024

echo "Mounting file systems..."
mount -n /proc
mount -n /sys

#start mdev
echo /sbin/mdev > /proc/sys/kernel/hotplug

# Load GPU frame-buffer driver module.
# modprobe linux-one
# modprobe fusion

if [ -n "`mount | grep nfs`" ]; then
    echo "*** NFS Boot ***"
    NFS=1
else
    echo "*** Flash Boot ***"
fi

# OEM Override
if [ -f /oem_override ]; then
    OEM_VAL="`cat /oem_override | sed -e 's/oem=\([0-9]*\)/\1/'`"
    echo "OEM Override: $OEM_VAL"
    echo "$OEM_VAL" > /proc/gxp/oem_override  
fi

#
# RootFS & Fixups
#
/etc/rc.d/init.d/mountroot


#
# Check for reboot from provision
#
if [ "`nvram get reboot_after_provision`" = "1" ]; then
    nvram set :rebooted_from_provision=1
else
    nvram set :rebooted_from_provision=0
fi
nvram set reboot_after_provision=0

#
# Start pvalue validation server.
#
if [ -f /tmp/.pvalue_validation ]; then
    killall pvalue_validation_server
    rm /tmp/.pvalue_validation
fi
if [ -f /etc/pvalues.bin ]; then
    /usr/bin/pvalue_validation_server /tmp/.pvalue_validation /etc/pvalues.bin &
fi

#
# Starting telemetryd 
#
if [ -e /var/run/telemetryd/.telemetryd_router -o -e /var/run/telemetryd/.telemetryd_lock ]; then
    rm /var/run/telemetryd/.telemetryd_lock
    rm /var/run/telemetryd/.telemetryd_router
fi
/etc/rc.d/init.d/telemetry start

#
# Apply Country specific deployment values
#
if [ -f /etc/rc.d/init.d/apply_country_profile ]; then
    /etc/rc.d/init.d/apply_country_profile
fi


#
# Start LED pattern driver
#
/etc/rc.d/init.d/ledrc start

if [ -f "/proc/gxp/dev_info/dev_id" -a "`cat /proc/gxp/dev_info/dev_id`" == "DP715" ]; then
    echo "start led_phone_boot" > /proc/gxp/led_patterns
fi

#
# Prepare Config
#
echo "Prepare conf"

# Dynamic defaults go here
# Set DHCP Vendor Class ID if it is reset
if [ -z "`nvram get 148`" -o "`nvram get 148`" = "0" ]; then
	nvram set 148="`cat /proc/gxp/dev_info/hw_features/vendor` `cat /proc/gxp/dev_info/dev_alias`"
fi

nvparse_conf /conf/rc.conf > /tmp/config/rc.conf

# 802.1X
#for i in `ls /conf/xsupplicant*`; do
#    nvparse_conf /conf/`basename $i` > /tmp/config/`basename $i`
#done

# Mount pseudo terminal (slave) devices.
if [ ! -d /dev/pts ]; then
    mkdir /dev/pts
fi

#make_chkdir /dev/pts
mount -t devpts devpts /dev/pts

# Make dir for crond settings.
make_chkdir /var/spool/cron
make_chkdir /var/spool/cron/crontabs

#
# Read Configuration File
#
if [ -r /tmp/config/rc.conf ]; then
    . /tmp/config/rc.conf
fi

if [ -r /etc/funcs.sh ]; then
    . /etc/funcs.sh
fi

#
# Check Provider Lock
#
if [ -n "`nvram get 9998`" -a "`nvram get 9999`" = "1" ]; then
	nvlockl2 /etc/l2locked
	nvlockl1 /etc/l1locked
	echo "Provider Lock Applied"
fi

#
# Set System Strings
#
nvram set :89="`cat /proc/gxp/dev_info/dev_alias`"
nvram set :67="`tr \"[:lower:]\" \"[:upper:]\" < /proc/gxp/dev_info/dev_mac`"
nvram set :1397="`cat /proc/gxp/dev_info/PN`"
nvram set :917="`cat /proc/gxp/dev_info/dev_rev`"
nvram set :dev_alias="`cat /proc/gxp/dev_info/dev_alias`"
nvram set :vendor_name="`cat /proc/gxp/dev_info/hw_features/vendor`"
nvram set :1395="`cat /proc/gxp/dev_info/hw_features/vendor`"
nvram set :1396="`cat /proc/gxp/dev_info/hw_features/vendor_fullname`"
nvram set :1397="`cat /proc/gxp/dev_info/PN`"
nvram set :user_agent="`nvram get 1395` `nvram get 89` `nvram get 68`"
nvram set :phone_model="`nvram get 89`"

if [ -f /proc/gxp/dev_info/fact_ver ]; then
    if [ -n "`cat /proc/gxp/dev_info/fact_ver`" ]; then
        local fact_ver="`cat /proc/gxp/dev_info/fact_ver`"
        nvram set :1397v="${fact_ver}"
        local fact_cfg_ver_str="`nvram get :1397` (C${fact_ver})"
        echo "Loading Factory cfg version ${fact_cfg_ver_str}"
    else
        echo "Default Factory cfg version"
    fi
fi

if [ -f /proc/gxp/dev_info/hw_features/dect_region ]; then
    nvram set :dect_region="`cat /proc/gxp/dev_info/hw_features/dect_region`"
fi

if [ -z "`prov_procheader /proc/provision/partition/prog|grep 23c97af9`" ]; then
    nvram set :68="unknown"
else
    nvram set :68=`prov_procheader /proc/provision/partition/prog|grep Ver|cut -d ':' -f2|tr -d ' '`
fi
if [ -z "`prov_procheader /proc/provision/partition/uboot|grep 23c97af9`" ]; then
    nvram set :69="unknown"
else
    nvram set :69=`prov_procheader /proc/provision/partition/uboot|grep Ver|cut -d ':' -f2|tr -d ' '`
fi
if [ -z "`prov_procheader /proc/provision/partition/core|grep 23c97af9`" ]; then
    nvram set :70="unknown"
else
    nvram set :70=`prov_procheader /proc/provision/partition/core|grep Ver|cut -d ':' -f2|tr -d ' '`
fi
if [ -z "`prov_procheader /proc/provision/partition/base|grep 23c97af9`" ]; then
    nvram set :45="unknown"
else
    nvram set :45=`prov_procheader /proc/provision/partition/base|grep Ver|cut -d ':' -f2|tr -d ' '`
fi
nvram set :210="No"
nvram set :80="Unknown"

/etc/init.d/syslog syslog_id

# Setup Security
if [ -f /proc/gxp/dev_info/security/private_key -a -f /proc/gxp/dev_info/security/certificate ]; then
    if [ -n "`cat /proc/gxp/dev_info/security/private_key`" -a -n "`cat /proc/gxp/dev_info/security/certificate`" ]; then
        echo "Loading custom certificate and private key"
        cat /proc/gxp/dev_info/security/private_key > /tmp/gxe50xx.pem
        cat /proc/gxp/dev_info/security/certificate >> /tmp/gxe50xx.pem
    else
        cat /etc/default.pem > /tmp/gxe50xx.pem
    fi
fi

# Setup LLDP Variables
#nvram set :med_hw_rev="`nvram get 89` `nvram get 917`"
# Note: These values match #defines in LLDPD, not the actual bits sent in the packet
#nvram set :med_poe_dtype=2
#nvram set :med_poe_source=5
#nvram set :med_poe_priority=0
#POE_VAL=130
#if [ -f /proc/gxp/dev_info/hw_features/poe_class ]; then
#    POE_CLASS="`cat /proc/gxp/dev_info/hw_features/poe_class`"
#    case "$POE_CLASS" in
#    1)
#        POE_VAL=38
#        ;;
#    2)
#        POE_VAL=64
#        ;;
#    esac
#fi
#nvram set :med_poe_val=$POE_VAL
#echo "Progress after LLDP"


#
# Basic Networking
#
/etc/rc.d/rc.network

#################################################
if [ "x${FACTORYMODE}" != "x1" ]; then

    #
    # Set sytem time-zone
    #
    if [ ! -z "${time_zone}" ]; then
        if [ ${time_zone} = customize ]; then
            echo ${customize_time_zone_rule} > /etc/TZ
        elif [ ${time_zone} = auto ]; then
            echo `nvram get autoTimezone` > /etc/TZ
        else
            echo ${time_zone} > /etc/TZ
        fi
    else
        echo ${customize_time_zone_rule} > /etc/TZ
    fi

    if [ "x${otz_enabled}" = "x1" ]; then
        DHCP_TZ="`nvram get override_time_zone`"
        if [ -n "${DHCP_TZ}" ]; then
            DHCP_OTZ="UCT"
            if [ $DHCP_TZ -gt 0 ]; then
                DHCP_OTZ=$DHCP_OTZ-
            else
                DHCP_TZ=$(($DHCP_TZ * -1))
            fi
            # convert to minute
            echo $DHCP_OTZ$(($DHCP_TZ / 3600)):$(($DHCP_TZ % 3600 / 60)):$(($DHCP_TZ % 60)) > /etc/TZ
        fi
    fi

fi #factorymode
#################################################

cd /
ln -s /dev/voice0 /dev/voice

nvram set :ini_prov=1
if [ $NFS -eq 1 ]; then
	# Add compressed swap space if available
#	/etc/init.d/ramzswap.sh

	if [ -n "`nvram get nfs_autorun`" ] ; then
		echo "NFS Autorun options selected = `nvram get nfs_autorun`."
		if [ `nvram get nfs_autorun` = 1 ] ; then
                        /etc/rc.d/init.d/load_modules.sh
#			check_adapter_voltage
			/app/bin/ht_start.sh
                       # Start applications non-essential at eraly boot
                       /etc/rc.d/init.d/post_gs_ata_init.sh
		elif [ `nvram get nfs_autorun` = 2 ] ; then
                        /etc/rc.d/init.d/load_modules.sh
#			check_adapter_voltage
			echo 'source /app/bin/ht_start.sh'
			echo 'httpd -h /app/www -p 80'
		elif [ `nvram get nfs_autorun` = 3 ] ; then
                        /etc/rc.d/init.d/load_modules.sh
			/app/bin/start_sys_tapi.sh
		fi
	else
		echo "No special NFS Autorun options selected."
	fi
	nvram set :ini_prov=1
else
    if [ -n "`mount | grep 'app'`" ]; then
        # Start applications essential at eraly boot
        /etc/rc.d/init.d/pre_gs_ata_init.sh

        /app/bin/ht_start.sh

        # Start applications non-essential at eraly boot
        /etc/rc.d/init.d/post_gs_ata_init.sh
    else
                # /app corrupted, recovery will start automatically
                # flash some lights or something...
                true
    fi

#################################################
    if [ "x${FACTORYMODE}" != "x1" ]; then
        # Check for upgrade on boot
		if [ -f /app/bin/gs_ata ]; then
			echo "will start provision after gs_ata later"
		else
			initial_provision &
		fi
	else
		nvram set :ini_prov=1
    fi #!FACTORYMODE    
#################################################
fi
